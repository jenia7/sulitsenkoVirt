// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Virtable.Infrastructure.Data;

#nullable disable

namespace Virtable.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240506151426_Grid_Record_Field")]
    partial class Grid_Record_Field
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Virtable.Core.ColumnAggregate.Column", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Discriminator")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Columns");

                    b.HasDiscriminator<int>("Discriminator");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Grid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Grids");
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.Field", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ColumnId")
                        .HasColumnType("bigint");

                    b.Property<int>("Discriminator")
                        .HasColumnType("int");

                    b.Property<long>("RecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RecordId");

                    b.ToTable("Fields");

                    b.HasDiscriminator<int>("Discriminator");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.Record", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GridId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Virtable.Core.ColumnAggregate.NumericColumn", b =>
                {
                    b.HasBaseType("Virtable.Core.ColumnAggregate.Column");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Virtable.Core.ColumnAggregate.SelectColumn", b =>
                {
                    b.HasBaseType("Virtable.Core.ColumnAggregate.Column");

                    b.Property<string>("Variants")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Virtable.Core.ColumnAggregate.StringColumn", b =>
                {
                    b.HasBaseType("Virtable.Core.ColumnAggregate.Column");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Virtable.Core.ColumnAggregate.ValidatedStringColumn", b =>
                {
                    b.HasBaseType("Virtable.Core.ColumnAggregate.Column");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.NumericField", b =>
                {
                    b.HasBaseType("Virtable.Core.GridAggregate.Records.Field");

                    b.Property<decimal?>("Number")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal(20,10)");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.StringField", b =>
                {
                    b.HasBaseType("Virtable.Core.GridAggregate.Records.Field");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Virtable.Core.ColumnAggregate.MultiselectColumn", b =>
                {
                    b.HasBaseType("Virtable.Core.ColumnAggregate.SelectColumn");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Columns.EmailColumn", b =>
                {
                    b.HasBaseType("Virtable.Core.ColumnAggregate.ValidatedStringColumn");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.Field", b =>
                {
                    b.HasOne("Virtable.Core.ColumnAggregate.Column", "Column")
                        .WithMany()
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Virtable.Core.GridAggregate.Records.Record", null)
                        .WithMany("Fields")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.Record", b =>
                {
                    b.HasOne("Virtable.Core.GridAggregate.Grid", null)
                        .WithMany("Records")
                        .HasForeignKey("GridId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Grid", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("Virtable.Core.GridAggregate.Records.Record", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
